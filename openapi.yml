{
    "openapi": "3.0.1",
    "info": {
        "title": "RCPCH Digital Growth Charts API",
        "description": "Royal College of Paediatrics and Child Health Digital Growth Charts",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://api.rcpch.ac.uk/growth/v1"
        }
    ],
    "paths": {
        "/uk-who/calculation": {
            "post": {
                "summary": "Centile and SDS Calculation route.",
                "description": "* Returns a single centile/SDS calculation for the selected `measurement_method`.\n* Gestational age correction will be applied automatically if appropriate according to the gestational age at birth data supplied.\n* Available `measurement_method`s are: `height`, `weight`, `bmi`, or `ofc` (OFC = occipitofrontal circumference = 'head circumference').\n* Note that BMI must be precalculated for the `bmi` function.\n",
                "operationId": "post-uk-who-calculation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SingleCalculationRequestParameters"
                            },
                            "example": {
                                "birth_date": "2020-04-12",
                                "gestation_days": 4,
                                "gestation_weeks": 40,
                                "measurement_method": "height",
                                "observation_date": "2020-06-12",
                                "observation_value": 60,
                                "sex": "male"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Centile calculation (single) according to the supplied data was returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/calculation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/uk-who/chart-data": {
            "post": {
                "summary": "Chart data API route.",
                "description": "* Requires results data paramaters from a call to the calculation endpoint.\n* Returns geometry data for constructing the lines of a traditional growth chart.\n",
                "operationId": "post-uk-who-chart-data",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChartDataRequestParameters"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chart data for plotting a traditional growth chart was returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/chartData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/uk-who/plottable-child-data": {
            "post": {
                "summary": "Child growth data in plottable format.",
                "description": "* Requires results data parameters from a call to the calculation endpoint.\n* Returns child measurement data in a plottable format (x and y parameters), with centiles and ages for labels.\n",
                "operationId": "post-uk-who-plottable-child-data",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChartDataRequestParameters"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "* Child growth data in plottable format (x and y parameters, centile and age labels) was returned.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/chartData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/utilities/references": {
            "get": {
                "summary": "Centile References Library API route.",
                "description": "* Does not expect any parameters.\n* Returns data on the growth reference data sources that this project is aware of.\n* To add a new reference please submit a pull request, create a GitHub Issue, or otherwise contact the Growth Charts team.\n",
                "operationId": "get-utilities-references",
                "responses": {
                    "200": {
                        "description": "Reference data was returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/references"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/utilities/create_fictional_child_measurements": {
            "post": {
                "summary": "Fictional Child Data Generator API route.",
                "description": "* Returns a series of generated fictional measurement data for a child.\n* Used for testing, demonstration and research purposes.\n",
                "operationId": "post-utilities-create_fictional_child_measurements",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FictionalChildRequestParameters"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Fictional child test data was returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fictionalChild"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/utilities/instructions": {
            "get": {
                "summary": "Instructions API route.",
                "description": "* Does not expect any parameters.\n* Returns HTML content derived from the README.md of the API repository\n* To amend the instructions please submit a pull request to https://github.com/rcpch/digital-growth-charts-server\n",
                "operationId": "get-utilities-instructions",
                "responses": {
                    "200": {
                        "description": "API Instructions and information was returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UtilitiesInstructionsGet200ApplicationJsonResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "openAPI3.0 Specification.",
                "description": "* The root endpoint of the dGC API returns the openAPI3.0 specification in JSON format.\n* This can be used to autogenerate clients and tests.\n* We use it internally to generate all documentation, Postman collections and tests.\n",
                "operationId": "get",
                "responses": {
                    "200": {
                        "description": "* openAPI3.0 Specification in JSON format, conforming to https://swagger.io/specification/, is returned.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApi"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BirthData": {
                "type": "object",
                "properties": {
                    "birth_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "estimated_date_delivery": {
                        "type": "string",
                        "format": "date"
                    },
                    "estimated_date_delivery_string": {
                        "type": "string"
                    },
                    "gestation_days": {
                        "type": "number"
                    },
                    "gestation_weeks": {
                        "type": "number"
                    },
                    "sex": {
                        "type": "string"
                    }
                }
            },
            "ChartDataRequestParameters": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "string"
                    }
                }
            },
            "ChildObservationValue": {
                "type": "object",
                "properties": {
                    "measurement_method": {
                        "type": "string"
                    },
                    "measurement_value": {
                        "type": "number"
                    }
                }
            },
            "FictionalChildRequestParameters": {
                "type": "object",
                "properties": {
                    "drift_amount": {
                        "type": "string",
                        "description": "The SDS range over which you want serial generated values to drift, simulating growth or pathological state"
                    },
                    "interval_type": {
                        "enum": [
                            "d",
                            "day",
                            "days",
                            "weeks",
                            "m",
                            "month",
                            "months",
                            "y",
                            "year",
                            "years"
                        ],
                        "type": "string",
                        "description": "The length of the time intervals used. Can be `d`, `day`, `days`, `weeks`, `m`, `month`, `months`, `y`, `year`, `years`. For example, setting the time interval to `months` and the intervals to `3` would generate fictional child growth data at 3-monthly intervals"
                    },
                    "intervals": {
                        "type": "integer",
                        "description": "The value of the time intervals between generated measurements. Set the time intervals using the `interval_type` parameter.",
                        "format": "int32"
                    },
                    "measurement_method": {
                        "enum": [
                            "height",
                            "weight",
                            "ofc",
                            "bmi"
                        ],
                        "type": "string",
                        "description": "The type of measurement requested: can be `height`, `weight`, `ofc` or `bmi`"
                    },
                    "number_of_measurements": {
                        "type": "integer",
                        "description": "The number of sequential measurements you would like the API to generate, at intervals specified by the `intervals` and `interval_type` parameters.",
                        "format": "int32"
                    },
                    "sex": {
                        "enum": [
                            "male",
                            "female"
                        ],
                        "type": "string",
                        "description": "The sex of the child"
                    },
                    "starting_age": {
                        "type": "number",
                        "description": "The **decimal** age at which the fictional child data series should start. Decimal ages are the child's age in years as a floating point number",
                        "format": "float"
                    },
                    "starting_sds": {
                        "type": "number",
                        "description": "The starting SDS at which you want the API to generate fictional measurements. This SDS values will drift upwards or downwards over the time series, according to the `drift_amount` parameter.",
                        "format": "float"
                    }
                }
            },
            "MeasurementCalculatedValues": {
                "type": "object",
                "properties": {
                    "centile": {
                        "type": "number",
                        "format": "float"
                    },
                    "centile_band": {
                        "type": "string"
                    },
                    "measurement_method": {
                        "type": "string"
                    },
                    "sds": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "MeasurementDates": {
                "type": "object",
                "properties": {
                    "chronological_calendar_age": {
                        "type": "string"
                    },
                    "chronological_decimal_age": {
                        "type": "number",
                        "format": "float"
                    },
                    "clinician_decimal_age_comment": {
                        "type": "string"
                    },
                    "corrected_calendar_age": {
                        "type": "string"
                    },
                    "corrected_decimal_age": {
                        "type": "number",
                        "format": "float"
                    },
                    "lay_decimal_age_comment": {
                        "type": "string"
                    },
                    "observation_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "MeasurementResponse": {
                "type": "object",
                "properties": {
                    "birth_data": {
                        "$ref": "#/components/schemas/BirthData"
                    },
                    "child_observation_value": {
                        "$ref": "#/components/schemas/ChildObservationValue"
                    },
                    "measurement_calculated_values": {
                        "$ref": "#/components/schemas/MeasurementCalculatedValues"
                    },
                    "measurement_dates": {
                        "$ref": "#/components/schemas/MeasurementDates"
                    }
                }
            },
            "OpenApi": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "string"
                    }
                }
            },
            "Reference": {
                "type": "object",
                "properties": {
                    "acknowledgement_text": {
                        "type": "string",
                        "description": "Acknowledgement text regarding the origin of the reference data (if available)"
                    },
                    "author": {
                        "type": "string",
                        "description": "The published authors of the Reference data (if available)"
                    },
                    "chart_name": {
                        "type": "string",
                        "description": "The common name of the reference data (if available)"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date of publication of the reference data (if available)"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the reference data: type of data, intended usage, limitations, applicable age ranges (if available)"
                    },
                    "file_name": {
                        "type": "string",
                        "description": "File name of the reference within our codebase (if available)"
                    },
                    "publication_reference": {
                        "type": "string",
                        "description": "Standard publication citation (if available)"
                    },
                    "publication_url": {
                        "type": "string",
                        "description": "URL for the publication (if available)"
                    }
                }
            },
            "SingleCalculationRequestParameters": {
                "required": [
                    "birth_date",
                    "measurement_method",
                    "observation_date",
                    "observation_value",
                    "sex"
                ],
                "type": "object",
                "properties": {
                    "birth_date": {
                        "type": "string",
                        "description": "Date of birth of the patient in YYYY-MM-DD ISO8601 format.",
                        "format": "date"
                    },
                    "gestation_days": {
                        "type": "number",
                        "description": "The number of additional days _beyond the completed weeks of gestation_ at which the patient was born. This enables Gestational Age correction if the child was not born at term. See also the other parameter `gestation_weeks` - both are usually required."
                    },
                    "gestation_weeks": {
                        "type": "number",
                        "description": "The number of completed weeks of gestation at which the patient was born. This enables Gestational Age correction if the child was not born at term. See also the other parameter `gestation_days` - both are usually required."
                    },
                    "measurement_method": {
                        "enum": [
                            "height",
                            "weight",
                            "bmi",
                            "ofc"
                        ],
                        "type": "string",
                        "description": "The type of measurement performed on the infant or child (`height`, `weight`, `bmi` or `ofc`). The value of this measurement is supplied as the `observation_value` parameter. The measurements represent height **in centimetres**, weight *in kilograms**, body mass index **in kilograms/metre²** and occipitofrontal circumference (head circumference, OFC) **in centimetres**."
                    },
                    "observation_date": {
                        "type": "string",
                        "description": "The date that the measurement was taken, in YYYY-MM-DD ISO8601 format.",
                        "format": "date"
                    },
                    "observation_value": {
                        "type": "number",
                        "description": "The value of the measurement supplied. Used in conjunction with type of measurement performed(`height`, `weight`, `bmi` or `ofc`) on the infant or child.",
                        "format": "float"
                    },
                    "sex": {
                        "enum": [
                            "male",
                            "female"
                        ],
                        "type": "string",
                        "description": "The sex of the patient, as a string value which can either be `male` or `female`. Abbreviations or alternatives are not accepted"
                    }
                }
            },
            "calculation": {
                "type": "object",
                "properties": {
                    "calculation": {
                        "$ref": "#/components/schemas/MeasurementResponse"
                    }
                }
            },
            "chartData": {
                "type": "object",
                "properties": {
                    "centile_data": {
                        "type": "string"
                    },
                    "child_data": {
                        "type": "string"
                    },
                    "sex": {
                        "type": "string"
                    }
                }
            },
            "fictionalChild": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string"
                    }
                }
            },
            "plottableChildData": {
                "type": "object",
                "properties": {
                    "child_data": {
                        "type": "string"
                    },
                    "sex": {
                        "type": "string"
                    }
                }
            },
            "references": {
                "type": "object",
                "properties": {
                    "references": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    }
                }
            },
            "UtilitiesInstructionsGet200ApplicationJsonResponse": {
                "type": "string"
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Primary-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}