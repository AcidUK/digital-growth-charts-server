"""
Generates the API spec in openAPI3 format, from the
"""
import json

from apispec import APISpec
from apispec.ext.marshmallow import MarshmallowPlugin
from apispec_webframeworks.flask import FlaskPlugin
import schemas
import blueprints


def generate(app):

    ###########################
    ##### API SPEC ############
    # API spec is autogenerated using the 'api-spec' library, and saved in the project root
    # as well as being served on the root '/' endpoint for consumption by services
    spec = APISpec(
        title="RCPCH Digital Growth Charts API",
        version="0.0.3",
        openapi_version="3.0.2",
        info=dict(
            description="Royal College of Paediatrics and Child Health Digital Growth Charts",
            license={"name": "GNU Affero General Public License",
                     "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"}),
        plugins=[MarshmallowPlugin(), FlaskPlugin()],
        servers=[{"url": 'https://api.rcpch.ac.uk/',
                  "description": 'RCPCH Production API Gateway (subscription keys required)'},
                 {"url": 'https://localhost:5000/',
                  "description": 'Your local development API'}],
    )

    spec.components.schema(
        "calculation",
        schema=schemas.CalculationResponseSchema)
    with app.test_request_context():
        spec.path(view=blueprints.uk_who_blueprint.uk_who_calculation)

    spec.components.schema(
        "chartData",
        schema=schemas.ChartDataResponseSchema)
    with app.test_request_context():
        spec.path(
            view=blueprints.uk_who_blueprint.uk_who_chart_coordinates)

    spec.components.schema(
        "plottableChildData",
        schema=schemas.PlottableChildDataResponseSchema)
    with app.test_request_context():
        spec.path(
            view=blueprints.uk_who_blueprint.uk_who_plottable_child_data)

    spec.components.schema(
        "references", schema=schemas.ReferencesResponseSchema)
    with app.test_request_context():
        spec.path(view=blueprints.utilities_blueprint.references)

    # TODO #122 Fictional child endpoint may be better renamed as a researcher tool?
    spec.components.schema(
        "fictionalChild", schema=schemas.FictionalChildResponseSchema)
    with app.test_request_context():
        spec.path(
            view=blueprints.utilities_blueprint.create_fictional_child_measurements)

    # Instructions endpoint (TODO: #121 #120 candidate for deprecation)
    with app.test_request_context():
        spec.path(view=blueprints.utilities_blueprint.instructions)

    # OpenAPI3 specification endpoint
    with app.test_request_context():
        spec.path(view=blueprints.openapi_blueprint.openapi_endpoint)

    # TODO Trisomy 21 endpoint

    # TODO Turner's syndrome endpoint

    ##### END API SPEC ########
    ###########################

    ################################
    ### API SPEC AUTO GENERATION ###

    # Create OpenAPI Spec and serialise it to file
    with open(r'openapi.yml', 'w') as file:
        openapi_yml = file.write(spec.to_yaml())

    with open(r'openapi.json', 'w') as file:
        openapi_json = file.write(json.dumps(
            spec.to_dict(), sort_keys=True, indent=4))
    ### END API SPEC AUTO GENERATION ###
    ####################################

    return spec
